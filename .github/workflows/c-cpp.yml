name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Install Conan
    - name: Setup Conan
      uses: conan-io/setup-conan@v1
      with:
        cache_packages: true

    # Configure Conan profile (optional, customize to your compilers/settings)
    - name: Install dependencies
      run: |
        conan install . --output-folder=build --build=missing

    # Build the project
    - name: Build project
      uses: threeal/cmake-action@v2.1.0
      with:
        source-dir: .
        build-dir: build
        cxx-compiler: clang++
        args: -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
        build-args: -- -j

  code-format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Install clang-format
    - name: Install clang-format
      run: sudo apt-get update && sudo apt-get install -y clang-format

    # Get changed C/C++ files
    - name: Get changed files
      id: changed-files
      run: |
        # Get files changed in the PR or commit
        echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.(cpp|hpp|c|h)$' || true
        echo "EOF" >> $GITHUB_ENV

    # Check formatting
    - name: Run clang-format check
      run: |
        echo "$CHANGED_FILES" | while read file; do
          if [ -f "$file" ]; then
            clang-format --dry-run --Werror "$file"
          fi
